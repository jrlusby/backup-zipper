#! /usr/bin/env python3

import sys
import os
import zipfile
import re

def main(argv):
    destination = "dst.zip"
    filelist = process_backups(argv[1])
    zip(filelist, destination)
    # upload zip to remote
    # upload_arc(destination, '192.168.26.80', 'support', 'asai1234')

def zip(files, dst):
    zf = zipfile.ZipFile(dst, "w")
    for absname in files:
        # print(absname)
        basename = os.path.basename(absname)
        # print(basename)
        arcname = os.path.join(dst, basename)
        # print(arcname)
        zf.write(absname, arcname)
    zf.close()

def process_backups(src):
    src = os.path.abspath(src)
    filelist = os.listdir(src)
    filelist[:] = [os.path.join(src, file) for file in filelist]
    backup_ids = extract_backup_ids(filelist)
    backup_ids.sort()
    new_backupfiles = []
    for file in filelist:
        if backup_ids[len(backup_ids)-1] in file:
            new_backupfiles.append(file)
    return new_backupfiles

def extract_backup_ids(backup_files):
    backup_ids = []
    for file in backup_files:
        backup_id = re.findall(r'\d+', file)
        if len(backup_id) > 0 and backup_id[len(backup_id)-1] not in backup_ids:
            backup_ids.append(backup_id[len(backup_id)-1])
    return backup_ids
    
def upload_arc(archive, target_dir, destination, username, password):
    from ftplib import FTP
    try:
        ftp = FTP(destination)
        ftp.login(user=username, passwd=password)
        ftp.cwd(target_dir)
        file = open(archive, 'rb')
        ftp.storbinary('STOR '+archive, file)
        file.close()
        ftp.quit()
    except:
        print('whoa wtf happened?', sys.exc_info()[0])

if __name__ == '__main__':
    sys.exit(main(sys.argv))
